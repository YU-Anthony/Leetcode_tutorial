# Problem
You are given an array of positive integers nums and want to erase a subarray containing unique elements. The score you get by erasing the subarray is equal to the sum of its elements.

Return the maximum score you can get by erasing exactly one subarray.

An array b is called to be a subarray of a if it forms a contiguous subsequence of a, that is, if it is equal to a[l],a[l+1],...,a[r] for some (l,r).

Example 1:
```bash
Input: nums = [4,2,4,5,6]
Output: 17
Explanation: The optimal subarray here is [2,4,5,6].
```

Example 2:
```bash
Input: nums = [5,2,1,2,5,2,1,2,5]
Output: 8
Explanation: The optimal subarray here is [5,2,1] or [1,2,5].
```

Constraints
- 1 <= nums.length <= 105
- 1 <= nums[i] <= 104

# Answer
经典 silding window 的解法且数组内容都为正

这里有个小技巧是我们用`set`来维护窗口内的数字，这样才不会 `TLE`
```python3
class Solution:
    def maximumUniqueSubarray(self, nums):
        
        res = set()
        l, r, ans, sum_ = 0, 0, 0, 0
        
        for r, val in enumerate(nums):
            while val in res:
                sum_ -= nums[l]
                res.remove(nums[l])
                l += 1
            sum_ += val
            res.add(val)
            ans = max(ans, sum_)
        return ans
```

- TC: O(n)
- SC: O(n)